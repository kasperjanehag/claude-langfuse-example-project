# Langfuse v3 Docker Compose Configuration
# Official setup with custom secrets
# Based on https://github.com/langfuse/langfuse/blob/main/docker-compose.yml

services:
  langfuse-worker:
    image: docker.io/langfuse/langfuse-worker:3
    container_name: langfuse-worker
    restart: always
    depends_on: &langfuse-depends-on
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    ports:
      - 127.0.0.1:3030:3030
    environment: &langfuse-worker-env
      NEXTAUTH_URL: http://localhost:3000
      DATABASE_URL: postgresql://langfuse:langfuse_v3_password_secure_2025@postgres:5432/langfuse
      SALT: 4ce72d4be696dc35a902dd71360e42097ec52ba822f7c1d78423883acebcdbbc
      ENCRYPTION_KEY: fe14319b10485e6e11da29b1520551f90d448ba0dc3c2d0893afceb89075fd29
      TELEMETRY_ENABLED: "false"
      LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES: "true"

      # ClickHouse Configuration
      CLICKHOUSE_MIGRATION_URL: clickhouse://clickhouse:9000
      CLICKHOUSE_URL: http://clickhouse:8123
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse_secure_2025
      CLICKHOUSE_CLUSTER_ENABLED: "false"

      # S3/MinIO - Event Upload (internal ingestion)
      LANGFUSE_S3_EVENT_UPLOAD_BUCKET: langfuse
      LANGFUSE_S3_EVENT_UPLOAD_REGION: auto
      LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID: minioadmin
      LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY: minio_secure_2025
      LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT: http://minio:9000
      LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE: "true"
      LANGFUSE_S3_EVENT_UPLOAD_PREFIX: events/

      # S3/MinIO - Media Upload (images, attachments) - CRITICAL: must be externally accessible
      LANGFUSE_S3_MEDIA_UPLOAD_BUCKET: langfuse
      LANGFUSE_S3_MEDIA_UPLOAD_REGION: auto
      LANGFUSE_S3_MEDIA_UPLOAD_ACCESS_KEY_ID: minioadmin
      LANGFUSE_S3_MEDIA_UPLOAD_SECRET_ACCESS_KEY: minio_secure_2025
      LANGFUSE_S3_MEDIA_UPLOAD_ENDPOINT: http://localhost:9090
      LANGFUSE_S3_MEDIA_UPLOAD_FORCE_PATH_STYLE: "true"
      LANGFUSE_S3_MEDIA_UPLOAD_PREFIX: media/

      # S3/MinIO - Batch Export
      LANGFUSE_S3_BATCH_EXPORT_ENABLED: "false"
      LANGFUSE_S3_BATCH_EXPORT_BUCKET: langfuse
      LANGFUSE_S3_BATCH_EXPORT_PREFIX: exports/
      LANGFUSE_S3_BATCH_EXPORT_REGION: auto
      LANGFUSE_S3_BATCH_EXPORT_ENDPOINT: http://minio:9000
      LANGFUSE_S3_BATCH_EXPORT_EXTERNAL_ENDPOINT: http://localhost:9090
      LANGFUSE_S3_BATCH_EXPORT_ACCESS_KEY_ID: minioadmin
      LANGFUSE_S3_BATCH_EXPORT_SECRET_ACCESS_KEY: minio_secure_2025
      LANGFUSE_S3_BATCH_EXPORT_FORCE_PATH_STYLE: "true"

      # Redis Configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_AUTH: redis_secure_2025
      REDIS_TLS_ENABLED: "false"

  langfuse-web:
    image: docker.io/langfuse/langfuse:3
    container_name: langfuse-web
    restart: always
    depends_on: *langfuse-depends-on
    ports:
      - 3000:3000
    environment:
      <<: *langfuse-worker-env
      NEXTAUTH_SECRET: 7ba65bb2f82e9fc391cf769609a67e840bbced39cc8c33fa0d5ead4a6eee77e2

      # Headless initialization with provided API keys
      LANGFUSE_INIT_ORG_ID: default-org
      LANGFUSE_INIT_ORG_NAME: McKinsey
      LANGFUSE_INIT_PROJECT_ID: default-project
      LANGFUSE_INIT_PROJECT_NAME: TestProject
      LANGFUSE_INIT_PROJECT_PUBLIC_KEY: pk-lf-c5c83519-6ed4-4b04-bec6-2f2c530f91f0
      LANGFUSE_INIT_PROJECT_SECRET_KEY: sk-lf-f1ad855a-b7a0-4768-a390-718bc22c67af
      LANGFUSE_INIT_USER_EMAIL: admin@example.com
      LANGFUSE_INIT_USER_NAME: Admin User
      LANGFUSE_INIT_USER_PASSWORD: admin123456

  clickhouse:
    image: docker.io/clickhouse/clickhouse-server:24-alpine
    container_name: langfuse-clickhouse
    restart: always
    user: "101:101"
    environment:
      CLICKHOUSE_DB: default
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse_secure_2025
    volumes:
      - langfuse_clickhouse_data:/var/lib/clickhouse
      - langfuse_clickhouse_logs:/var/log/clickhouse-server
    ports:
      - 127.0.0.1:8123:8123
      - 127.0.0.1:9000:9000
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:8123/ping"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 60s

  minio:
    image: docker.io/minio/minio:latest
    container_name: langfuse-minio
    restart: always
    entrypoint: sh
    command: -c 'mkdir -p /data/langfuse && minio server --address ":9000" --console-address ":9001" /data'
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minio_secure_2025
    ports:
      - 9090:9000  # API port - externally accessible
      - 127.0.0.1:9091:9001  # Console UI
    volumes:
      - langfuse_minio_data:/data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 1s
      timeout: 5s
      retries: 5
      start_period: 1s

  redis:
    image: docker.io/redis:7-alpine
    container_name: langfuse-redis
    restart: always
    command: --requirepass redis_secure_2025
    ports:
      - 127.0.0.1:6379:6379
    volumes:
      - langfuse_redis_data:/var/lib/redis
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "redis_secure_2025", "ping"]
      interval: 3s
      timeout: 10s
      retries: 10

  postgres:
    image: docker.io/postgres:17-alpine
    container_name: langfuse-postgres
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U langfuse"]
      interval: 3s
      timeout: 3s
      retries: 10
    environment:
      POSTGRES_USER: langfuse
      POSTGRES_PASSWORD: langfuse_v3_password_secure_2025
      POSTGRES_DB: langfuse
      TZ: UTC
      PGTZ: UTC
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - langfuse_postgres_data:/var/lib/postgresql/data

volumes:
  langfuse_postgres_data:
    driver: local
  langfuse_clickhouse_data:
    driver: local
  langfuse_clickhouse_logs:
    driver: local
  langfuse_minio_data:
    driver: local
  langfuse_redis_data:
    driver: local
